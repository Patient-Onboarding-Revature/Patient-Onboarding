pipeline {
    agent any

    stages {
        stage('Build') {
            parallel {
                stage('Maven Build') {
                    steps {
                        sh 'mvn -f ./PatientOnboarding/pom.xml install'
                    }
                }
                
                stage('Angular Build') {
                    steps {
                        sh 'npm install ./ProjectAngular'
                        sh 'cd ./ProjectAngular'
                        sh 'ng build'
                    }
                }
            }
        }

        stage('Docker Build') {
            when {
				branch 'master'
			}
            steps {
                sh 'gcloud auth configure-docker'
                sh 'docker build -f ./PatientOnboarding/Dockerfile -t gcr.io/p3-patient-onboarding/patient-onboarding:UATlatest .'
                sh 'docker push gcr.io/p3-patient-onboarding/patient-onboarding:UATlatest'
            }
        }

        stage('Deployment') {
            parallel {
                stage('Deploy to Kubernetes') {
			        when {
				        branch 'master'
			        }
                    steps {
                        withCredentials([file(credentialsId: 'default-compute-service-account', variable: 'DCSA_KEY')]) {
                            sh('gcloud auth activate-service-account --key-file=${DCSA_KEY}')
                            sh('gcloud container clusters get-credentials uat-cluster --zone us-central1-a')
                            sh('kubectl set image deployments/tomcat-server patient-onboarding=gcr.io/p3-patient-onboarding/patient-onboarding:UATlatest
                        }
                    }
                }

                stage('Deploy to Bucket') {
			        when {
				        branch 'master'
			        }
                    steps {
                        withCredentials([file(credentialsId: 'gke-credentials', variable: 'GKE_KEY')]) {
                            sh('gcloud auth activate-service-account --key-file=${GKE_KEY}')
                            sh('gsutil -m rm -ar gs://patient-onboarding-test/*')
                            sh('gsutil -m cp -r ./dist/ProjectAngular/.* gs://patient-onboarding-test/')
                        }
                    }
                }
            }
        }

        stage('Clean Workspace') {
            steps {
                sh 'docker image prune -f'
                cleanWs(deleteDirs:true)
            }
        }
    }
}
